
enchant(); //lancement de enchantjs initialisation du framework (variable, object)








window.onload = Rpg;






// enchant(); //lancement de enchantjs initialisation du framework (variable, object)



function Rpg() {
    
    
    let game = new Game(1088, 832); // taille du jeu 
    


    game.fps = 15; //fps game


    //scholar, banner, quest selector, to add

    //chargement image and music
    game.preload('img/Villager-6.gif','img/agitated.gif','img/grave1.gif','img/Fruit_Basket.gif',
    'img/basket1.gif','img/Sheep.gif','img/jar5.gif','img/yellow_chocobo_weak.gif',
    'img/palace_chair.gif','img/oven.gif','img/Blaze_Torch_Lit.gif',
    'img/Ice_Pillar.gif','img/Cursed_Tree.gif','img/Entangled_Pillar.gif','img/woodman_weak.gif','img/Gabomba_Statue.gif',
    'img/big_basket_wtr.gif','img/chocobo.gif','img/Chicken.gif','img/Growth.gif',
    'img/Iris.gif','img/angel1.gif','img/Jupiter_Statue2.gif',
    'img/Jupiter_Statue.gif','img/Sea_Gods_Tear.gif','img/statue_angel.gif','img/Izanami.gif','img/Hail.gif','img/Prison_Key.gif',
    'img/Silence.gif','img/baum.png','img/Knowledge_Tree.png','img/Maha.gif','img/Teleport_Pad.gif',
    'img/tree.png','img/Venus_Statue_Yellow.gif',
    'img/Venus_Statue_Red.gif','img/Venus_Statue_Blue.gif','img/Scholar-2.gif','img/banner.gif',
    'img/huh.gif','img/Exclamatory.gif', 'img/chara6',
    'img/Kolima_Bridge.gif','img/monster6.gif',
    'img/Villager7.gif', 'img/Apojii_House.gif', 
    'img/Saturos.gif','img/Venus_Djinn_Front.gif', 'img/skull.gif', 
    'img/Shell_Torch.gif', 'img/blazT.gif','img/sack1.gif', 'img/Dragon.gif', 'img/woodpile3.gif', 
    'img/Teepee.gif', 'img/Round_Rug2.gif', 'img/Karst_Fight.gif', 'img/flipped_jar.gif', 
    'img/Floating_Barrel.gif', 'img/Loho_Statue.gif', 'img/misc_pillar.gif', 'img/end-table.gif', 'img/Great_Healer.gif',
    'img/Warrior.gif', 'img/Yi.gif', 'img/Turtle.gif', 'img/well2.gif', 'img/Kraden_Right.gif', 
    'img/Menardi_Walk_Up.gif', 'img/Bilibin_Statue.gif', 'img/Jenna_SW.gif','img/Menardi_Small.gif',
    'img/sign2.gif', 'img/tiedup_villager.gif', 'img/sign3.gif', 
    'img/Mars_Statue.gif', 'img/Procne.gif', 'img/barrel7.gif', 'img/Sheba_Situp.gif', 
    'img/Hay_Bundle.gif', 'img/Felix_Situp.gif', 'img/fallen_Sheba.gif', 
    'img/Big_Stump2.gif', 'img/Mercury_Statue.gif', 'img/Venus_Aerie_Statue.gif', 'img/Kolima_Potion_Shop.gif', 'img/sign.gif',
    'img/sword3.gif', 'img/Theif.gif', 'img/book.gif', 'img/Yallam_House.gif',
    'img/8.png','img/9.png', 'img/Yallam_House.gif', 'img/Prox_Villager5.gif',
    'img/2.png', 'img/6.png', 'img/Villager-2.gif', 'img/map1.png', 'img/chara6.png','img/chara5.png', 'img/monster6.gif', 
    'img/Mia_Left.gif', 'img/Apojii_Inn_Shop.gif', 'img/1.png', 'img/flame.gif',
    'img/Condemn.gif','img/Kolima_Potion_Shop.gif', 'img/stone_face.gif', 'img/Yallam_Blacksmith.gif', 'img/Yallam_Inn.gif');

    
    game.preload('113 the white cloud in the sky.mp3');


    
    // Au chargement du jeu 
    game.onload = function () {
        let map = new Map(16, 16); // new instance map 
        map.image = game.assets['img/map1.png']; // ajout images au jeu
        map.loadData([
            
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,  7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,  7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  6,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,  7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,  1,  1,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,  7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,  1,  1,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,  7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,  1,112,112,112,112,112,112,  7, 23, 23,  7,112,112,112,112,112,112,112,112,112,112,  7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,111,111,112,112,112,112,112,  7,  1,  1, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,112,112,112,  7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,112,112,112,  7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 23,112,112,112,112,112,112,112,  7,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 23, 23, 23, 23, 23, 23,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7, 23, 23, 23, 23, 23,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7, 23, 23, 23,  7,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7, 23, 23, 23,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  6,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 83, 84, 83, 84,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 23,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,116,116,115,116,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,112,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 23,  7,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  7,112,112,112,  7, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 23, 23, 23, 23, 23, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1, 98, 98, 98,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1, 32,  0],
            
        
        
        
        
        
        
        ], [


            [ -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, 76, 77, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1,  7,  7,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1,112,112, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1,112,112, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1,112,112,112, -1, -1, -1, -1, -1, 76, 77, -1, 60, 61, 60, 61, 60, 61, 60, 61, -1, -1, -1, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1,112,112,112, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, 76, 77, 76, 77, 76, 77, -1, -1, -1, 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, 76, 77, 76, 77, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ 60, 61, 60, 61, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, 76, 77, 76, 77, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, 60, 61, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, 76, 77, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, 99, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 99,116, -1, -1, -1, 28, 28, 28, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, 28, 28, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, 60, 61, 76, 77, 76, 77, -1, 60, 61, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, 60, 61, 60, 61, 76, 77, 60, 61, -1, 60, 61, 76, 77, 60, 61, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, 76, 77, 76, 77, 60, 61, 76, 77, -1, 76, 77, -1, -1, 76, 77, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, 76, 77, 60, 61, 60, 61, -1, 76, 77, 60, 61, 60, 61, 60, 61, 60, 61, -1, -1, -1],
            [ -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, -1, 76, 77, 60, 61, 76, 77, 76, 77, -1, 60, 61, 76, 77, 76, 77, 76, 77, 76, 77, -1, -1, -1],
            [ -1, -1, -1, -1, 76, 77, -1, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, -1, 60, 61, 60, 61, 60, 61, -1, -1, -1, -1, -1, 60, 61, 76, 77, 60, 61, -1, 76, 77, 60, 61, 60, 61, -1, 76, 77, 60, 61, 60, 61, -1, -1, -1, 60, 61, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, -1, 76, 77, 76, 77, 76, 77, -1, -1, -1, -1, -1, 76, 77, -1, -1, 76, 77, 60, 61, -1, 76, 77, 76, 77, -1, -1, -1, 76, 77, 76, 77, -1, -1, -1, 76, 77, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, -1, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [ -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, -1, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,  7, 23, 23, 23, 23, 23, 23, 23, 23, 23,  7, 23, 23, 23, 23,  7, -1, -1, -1,  7, 23, 23, 23, 23,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,  7,144,145,145,145,145,145,145,145,146,  7,144,145,145,146,  7, -1, -1, -1,  7,144,145,145,146,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,  7,160,161,161,161,161,161,161,161,162, 23, 23, 23, 23,162,  7, -1, -1, -1,  7,160,161,161,162,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,  7,160,161,161,161,161,161,161,161,161,145,145,145,145,162,  7, -1, -1, -1,  7,160,161,161,162,  7, 60, 61, -1, -1, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [226,226,226,226,226,226,226,226,226,226,226,226,211,212,213,226,226,226,  7,160,161,161,161,161,161,161,161,161,161,161,161,161,162, 23, 23, 23, 23, 23,160,161,161,162,  7, 76, 77, 60, 61, -1, -1, 76, 77, 60, 61, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [226,226,226,226,226,226,226,226,226,197,226,226,227,228,229,226,226,226,  7,160,161,161,161,161,161,161,161,161,161,161,161,161,161,145,145,145,145,145,161, 60, 61,162,  7, 60, 61, 76, 77, -1, 60, 61, -1, 76, 77, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [226,226,226,226,226,226,226,226,226,210,226,226,243,244,245,226,226,226,  7,160,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161, 76, 77,162,  7, 76, 77, 60, 61, -1, 76, 77, -1, -1, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [226,226,226,226,226,226,226,226,226,210,195,226,226,226,226,226,226,226,  7,176,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,177,178,  7, 60, 61, 76, 77, 60, 61, -1, -1, -1, 76, 77, 60, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
            [226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 76, 77, -1, -1, 76, 77, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
           


            ]);

        map.collisionData = [

            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  1,  1,  1,  1,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  1,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  1,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  1,  1,  1,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  1],
            [  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1],
            [  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  1],
           



        ];


        // utiliser pour disposer des (sprites)  class du framework # M

        // let foregroundMap = new Map(16, 16);
        // foregroundMap.image = game.assets['img/map1.png'];
        // foregroundMap.loadData([

        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        //     [ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],

        // ]);

        game.score = 0;

        game.Musashi_Sound = game.assets['113 the white cloud in the sky.mp3']; // ajout son au jeu 
        game.Musashi_Sound.play(); // lancement de la fonction  son du framework 

        //start-circle



        // instanciation à partir des images 



            







        //Quest !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        //Silence Quest 

        let silence_yoda = new Sprite(16, 16);
        silence_yoda.image = game.assets['img/Silence.gif'];
        silence_yoda.x = 10 * 27;
        silence_yoda.y = 10 * 46;
        silence_yoda.opacity = 1;


        let silence_chief = new Sprite(16, 16);
        silence_chief.image = game.assets['img/Silence.gif'];
        silence_chief.x = 10 * 104;
        silence_chief.y = 10 * 14;
        silence_chief.opacity = 1;



        let silence_chaman = new Sprite(16, 16);
        silence_chaman.image = game.assets['img/Silence.gif'];
        silence_chaman.x = 10 * 88;
        silence_chaman.y = 10 * 10;
        silence_chaman.opacity = 0;


            
        let silence_Statue_Aquarius = new Sprite(16, 16);
        silence_Statue_Aquarius.image = game.assets['img/Silence.gif'];
        silence_Statue_Aquarius.x = 10 * 96;
        silence_Statue_Aquarius.y = 10 * 26;
        silence_Statue_Aquarius.opacity = 0;



        let silence_Cupidon = new Sprite(16, 16);
        silence_Cupidon.image = game.assets['img/Silence.gif'];
        silence_Cupidon.x = 10 * 31;
        silence_Cupidon.y = 10 * 74;
        silence_Cupidon.opacity = 0;




        let silence_Husim = new Sprite(16, 16);
        silence_Husim.image = game.assets['img/Silence.gif'];
        silence_Husim.x = 10 * 50;
        silence_Husim.y = 10 * 69;
        silence_Husim.opacity = 0;


        let silence_flame = new Sprite(16, 16);
        silence_flame.image = game.assets['img/Silence.gif'];
        silence_flame.x = 10 * 27;
        silence_flame.y = 10 * 71;
        silence_flame.opacity = 0;











        //Exclamatory 



        let excla_yoda = new Sprite(16, 16);
        excla_yoda.image = game.assets['img/Exclamatory.gif'];
        excla_yoda.x = 10 * 27;
        excla_yoda.y = 10 * 46;
        

        let excla_yoda_2 = new Sprite(16, 16);
        excla_yoda_2.image = game.assets['img/Exclamatory.gif'];
        excla_yoda_2.x = 10 * 76;
        excla_yoda_2.y = 10 * 66;
        excla_yoda_2.opacity = 0;





        let excla_chaman = new Sprite(16, 16);
        excla_chaman.image = game.assets['img/Exclamatory.gif'];
        excla_chaman.x = 10 * 88;
        excla_chaman.y = 10 * 10;
        excla_chaman.opacity = 0;


        let excla_chaman_2 = new Sprite(16, 16);
        excla_chaman_2.image = game.assets['img/Exclamatory.gif'];
        excla_chaman_2.x = 10 * 74;
        excla_chaman_2.y = 10 * 66;
        excla_chaman_2.opacity = 0;

        
        
        let excla_Hino = new Sprite(16, 16);
        excla_Hino.image = game.assets['img/Exclamatory.gif'];
        excla_Hino.x = 10 * 11;
        excla_Hino.y = 10 * 38;
        excla_Hino.opacity = 0;
        
        


        
        
        
        let excla_chief = new Sprite(16, 16);
        excla_chief.image = game.assets['img/Exclamatory.gif'];
        excla_chief.x = 10 * 104;
        excla_chief.y = 10 * 14;

          
        let excla_Jenna = new Sprite(16, 16);
        excla_Jenna.image = game.assets['img/Exclamatory.gif'];
        excla_Jenna.x = 10 * 93;
        excla_Jenna.y = 10 * 25;
        excla_Jenna.opacity = 0;


       

        let excla_warrior = new Sprite(16, 16);
        excla_warrior.image = game.assets['img/Exclamatory.gif'];
        excla_warrior.x = 10 * 84;
        excla_warrior.y = 10 * 50;
        excla_warrior.opacity = 0;



        let excla_Sainte = new Sprite(16, 16);
        excla_Sainte.image = game.assets['img/Exclamatory.gif'];
        excla_Sainte.x = 10 * 77;
        excla_Sainte.y = 10 * 38;
        excla_Sainte.opacity = 0;


        let excla_Phenix = new Sprite(16, 16);
        excla_Phenix.image = game.assets['img/Exclamatory.gif'];
        excla_Phenix.x = 10 * 86;
        excla_Phenix.y = 10 * 30;
        excla_Phenix.opacity = 0;

       
        let excla_Aquarius = new Sprite(16, 16);
        excla_Aquarius.image = game.assets['img/Exclamatory.gif'];
        excla_Aquarius.x = 10 * 105;
        excla_Aquarius.y = 10 * 22;
        excla_Aquarius.opacity = 0;


        let excla_Nehemiel = new Sprite(16, 16);
        excla_Nehemiel.image = game.assets['img/Exclamatory.gif'];
        excla_Nehemiel.x = 10 * 53;
        excla_Nehemiel.y = 10 * 72;
        excla_Nehemiel.opacity = 0;



        let excla_Ananai = new Sprite(16, 16);
        excla_Ananai.image = game.assets['img/Exclamatory.gif'];
        excla_Ananai.x = 10 * 37;
        excla_Ananai.y = 10 * 65;
        excla_Ananai.opacity = 0;


        let excla_Izanami = new Sprite(16, 16);
        excla_Izanami.image = game.assets['img/Exclamatory.gif'];
        excla_Izanami.x = 10 * 21;
        excla_Izanami.y = 10 * 65;
        excla_Izanami.opacity = 0;


        let excla_Pillar = new Sprite(16, 16);
        excla_Pillar.image = game.assets['img/Exclamatory.gif'];
        excla_Pillar.x = 10 * 1;
        excla_Pillar.y = 10 * 72;
        excla_Pillar.opacity = 0;



      








        //Interogative !!!!!!!!!!!!!!!!!!!!!!!!!!

        
        
        let inter_brother_sainte = new Sprite(16, 16);
        inter_brother_sainte.image = game.assets['img/huh.gif'];
        inter_brother_sainte.x = 10 * 78;
        inter_brother_sainte.y = 0;
        inter_brother_sainte.opacity = 0;




        let inter_aquarius = new Sprite(16, 16);
        inter_aquarius.image = game.assets['img/huh.gif'];
        inter_aquarius.x = 10 * 74;
        inter_aquarius.y = 0;
        inter_aquarius.opacity = 0;






        //TP ring !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        let Tp_hell = new Sprite(64, 48);
        Tp_hell.image = game.assets['img/Teleport_Pad.gif'];
        Tp_hell.x = 10 * 36;
        Tp_hell.y = 10 * 74;
        Tp_hell.opacity = 0.2;


        



       
        
        





        //###################################
        // SACRED FOREST




        let Knowledge_tree = new Sprite(281, 255);
        Knowledge_tree.image = game.assets['img/Knowledge_Tree.png'];
        Knowledge_tree.x = 10 * 86;
        Knowledge_tree.y = 10 * 49;
      

        let Guardian_tree = new Sprite(128, 128);
        Guardian_tree.image = game.assets['img/baum.png'];
        Guardian_tree.x = 10 * 77;
        Guardian_tree.y = 10 * 61;
        Guardian_tree.opacity = 1;


        let Gaia_statue = new Sprite(64, 64);
        Gaia_statue.image = game.assets['img/Gabomba_Statue.gif'];
        Gaia_statue.x = 10 * 87;
        Gaia_statue.y = 10 * 63;
        Gaia_statue.opacity = 1;
        
        
        let Little_Ent = new Sprite(34, 36);
        Little_Ent.image = game.assets['img/woodman_weak.gif'];
        Little_Ent.x = 10 * 93;
        Little_Ent.y = 10 * 69;
        Little_Ent.opacity = 1;

        let Baby_Ent = new Sprite(26, 32);
        Baby_Ent.image = game.assets['img/Cursed_Tree.gif'];
        Baby_Ent.x = 10 * 100;
        Baby_Ent.y = 10 * 70;
        Baby_Ent.opacity = 1;
        
        
        

        let Pillar_Forest = new Sprite(19, 43);
        Pillar_Forest.image = game.assets['img/Entangled_Pillar.gif'];
        Pillar_Forest.x = 10 * 86;
        Pillar_Forest.y = 10 * 76;
        Pillar_Forest.opacity = 0.90;
        


        let Pillar_Forest_enter = new Sprite(19, 43);
        Pillar_Forest_enter.image = game.assets['img/Entangled_Pillar.gif'];
        Pillar_Forest_enter.x = 10 * 77;
        Pillar_Forest_enter.y = 10 * 65;
        Pillar_Forest_enter.opacity = 1;
        Pillar_Forest_enter.scaleX = Math.sin(30);
        Pillar_Forest_enter.opacity = 0.90;


        let Pillar_Forest_south = new Sprite(19, 43);
        Pillar_Forest_south.image = game.assets['img/Entangled_Pillar.gif'];
        Pillar_Forest_south.x = 10 * 77;
        Pillar_Forest_south.y = 10 * 72;
        Pillar_Forest_south.opacity = 0.90;
        Pillar_Forest_south.scaleX = Math.sin(30);













        // sorcerer shop etc

        let Sorcerer = new Sprite(32, 32);
        Sorcerer.image = game.assets['img/Maha.gif'];
        Sorcerer.x = 10 * 49;
        Sorcerer.y = 10 * 5;
      




        let kolima_shop = new Sprite(144, 112);
        kolima_shop.image = game.assets['img/Kolima_Potion_Shop.gif'];
        kolima_shop.x = 10 * 55;
        kolima_shop.y = 10 * 11;










        //South-East forest 

        // let Tree_1 = new Sprite(65, 86);
        // Tree_1.image = game.assets['img/tree.png'];
        // Tree_1.x = 10 * 80;
        // Tree_1.y = 10 * 50;
       







        //fashion  & items quest castle 
        let banner_castle = new Sprite(16, 26);
        banner_castle.image = game.assets['img/banner.gif'];
        banner_castle.x = 10 * 51;
        banner_castle.y = 10 * 14;


        let blazT = new Sprite(16, 24); // new instance sprite 
        blazT.image = game.assets['img/blazT.gif']; //ajout image au jeu 
        blazT.x = 10 * 79; // positionnement en x de l'objet
        blazT.y = 10 ; // positionnement en y de l'objet 
        

        let Round_Rug2 = new Sprite(32, 24);
        Round_Rug2.image = game.assets['img/Round_Rug2.gif'];
        Round_Rug2.x = 10 * 62;
        Round_Rug2.y = 10;
        









        //teepee & bandit


        let Teepee = new Sprite(48, 61);
        Teepee.image = game.assets['img/Teepee.gif'];
        Teepee.x = 10 * 13;
        Teepee.y = 10 * 30;

        let ElBarto = new Sprite(32, 32);
        ElBarto.image = game.assets['img/Karst_Fight.gif'];
        ElBarto.x = 10 * 13;
        ElBarto.y = 10 * 35;
        

        let Jar = new Sprite(16, 14);
        Jar.image = game.assets['img/flipped_jar.gif'];
        Jar.x = 10 * 11;
        Jar.y = 10 * 43;



        let Chicken = new Sprite(32, 32);
        Chicken.image = game.assets['img/Chicken.gif'];
        Chicken.x = 10 * 10;
        Chicken.y = 10 * 49;


        let Chicken2 = new Sprite(32, 32);
        Chicken2.image = game.assets['img/Chicken.gif'];
        Chicken2.x = 10 * 15;
        Chicken2.y = 10 * 52;
        Chicken.scaleX = Math.sin(30);


        let Sea_barrel = new Sprite(24, 24);
        Sea_barrel.image = game.assets['img/Floating_Barrel.gif'];
        Sea_barrel.x = 10 * 106;
        Sea_barrel.y = 10 * 13;

        let tiedup_villager = new Sprite(31, 32);
        tiedup_villager.image = game.assets['img/tiedup_villager.gif'];
        tiedup_villager.x = 10 * 78;
        tiedup_villager.y = 10;
        tiedup_villager.opacity = 1;

        let Warrior = new Sprite(31, 32);
        Warrior.image = game.assets['img/Warrior.gif'];
        Warrior.x = 10 * 83;
        Warrior.y = 10 * 52;


        let Yi = new Sprite(31, 32);
        Yi.image = game.assets['img/Yi.gif'];
        Yi.x = 10 * 82;
        Yi.y = 10 * 22;



        //King Statue



        let King_Statue = new Sprite(24, 40);
        King_Statue.image = game.assets['img/Loho_Statue.gif'];
        King_Statue.x = 10 * 53;
        King_Statue.y = 10 * 1;


        let King_Chair = new Sprite(26, 27);
        King_Chair.image = game.assets['img/palace_chair.gif'];
        King_Chair.x = 10 * 56;
        King_Chair.y = 0;

        



        let imgskull = new Sprite(14, 16);
        imgskull.image = game.assets['img/skull.gif'];
        imgskull.x = 10 * 7;
        imgskull.y = 10 * 70;
        

        let Pillar1 = new Sprite(16, 32);
        Pillar1.image = game.assets['img/misc_pillar.gif'];
        Pillar1.x = 10 * 1;
        Pillar1.y = 10 * 73;
        

        let Well = new Sprite(31, 28);
        Well.image = game.assets['img/well2.gif'];
        Well.x = 10 * 29;
        Well.y = 10 * 46;



        let Chaman = new Sprite(16, 32);
        Chaman.image = game.assets['img/Great_Healer.gif'];
        Chaman.x = 10 * 88;
        Chaman.y = 10 * 12;


        let Lose = new Sprite(14, 28);
        Lose.image = game.assets['img/Villager-6.gif'];
        Lose.x = 10 * 93;
        Lose.y = 10 * 12;
        Lose.opacity = 0;



        let Sheep_sacred_village = new Sprite(32, 32);
        Sheep_sacred_village.image = game.assets['img/Sheep.gif'];
        Sheep_sacred_village.x = 10 * 85;
        Sheep_sacred_village.y = 10 * 19;

        let Sheep_sacred_village_Sin = new Sprite(32, 32);
        Sheep_sacred_village_Sin.image = game.assets['img/Sheep.gif'];
        Sheep_sacred_village_Sin.x = 10 * 84;
        Sheep_sacred_village_Sin.y = 10 * 20;
        Sheep_sacred_village_Sin.scaleX = Math.sin(30);


        let Sheep_sacred_village_Sin2 = new Sprite(32, 32);
        Sheep_sacred_village_Sin2.image = game.assets['img/Sheep.gif'];
        Sheep_sacred_village_Sin2.x = 10 * 85;
        Sheep_sacred_village_Sin2.y = 10 * 21;
        Sheep_sacred_village_Sin2.scaleX = Math.sin(40);




        let Oven_sacred_village = new Sprite(30, 22);
        Oven_sacred_village.image = game.assets['img/oven.gif'];
        Oven_sacred_village.x = 10 * 101;
        Oven_sacred_village.y = 10 * 12;







        let Turtle = new Sprite(32, 32);
        Turtle.image = game.assets['img/Turtle.gif'];
        Turtle.x = 10 * 98;
        Turtle.y = 10 * 10;



        let flower = new Sprite(16, 30);
        flower.image = game.assets['img/end-table.gif'];
        flower.x = 10 * 50;
        flower.y = 10 * 5;

        let Queen = new Sprite(17, 27);
        Queen.image = game.assets['img/Mia_Left.gif'];
        Queen.x = 10 * 58;
        Queen.y = 10 * 8;



        let King = new Sprite(32, 32);
        King.image = game.assets['img/Kraden_Right.gif'];
        King.x = 10 * 53;
        King.y = 10 * 8;



       

        let Ishtar_Statue = new Sprite(29, 54);
        Ishtar_Statue.image = game.assets['img/Bilibin_Statue.gif'];
        Ishtar_Statue.x = 10 * 103;
        Ishtar_Statue.y = 10 * 4;
        

        let Venus_Statue = new Sprite(25, 40);
        Venus_Statue.image = game.assets['img/Venus_Aerie_Statue.gif'];
        Venus_Statue.x = 10 * 45;
        Venus_Statue.y = 10 * 42;
           




        let Jenna = new Sprite(17, 29);
        Jenna.image = game.assets['img/Jenna_SW.gif'];
        Jenna.x = 10 * 93;
        Jenna.y = 10 * 27;














         
        //###############################################################
        // Angel's Temple !!!#############################################


        let Angel_statue = new Sprite(28, 52);
        Angel_statue.image = game.assets['img/statue_angel.gif'];
        Angel_statue.x = 10 * 62;
        Angel_statue.y = 10 * 66;
        Angel_statue.opacity = 1;






        let Cupidon = new Sprite(23, 51);

        Cupidon.image = game.assets['img/Jupiter_Statue.gif'];
        Cupidon.x = 10 * 30;
        Cupidon.y = 10 * 75;
        Cupidon.opacity = 1;


        let Nehemiel = new Sprite(21, 41);
        
        Nehemiel.image = game.assets['img/angel1.gif'];
        Nehemiel.x = 10 * 52;
        Nehemiel.y = 10 * 74;
        Nehemiel.opacity = 1;

        


        let Husim = new Sprite(34, 64);
        
        Husim.image = game.assets['img/Jupiter_Statue2.gif'];
        Husim.x = 10 * 50;
        Husim.y = 10 * 69;
        Husim.opacity = 1;


        let Tears_God = new Sprite(16, 16);
        
        Tears_God.image = game.assets['img/Sea_Gods_Tear.gif'];
        Tears_God.x = 10 * 47;
        Tears_God.y = 10 * 70;
        Tears_God.opacity = 1;


        let Blaze_Angel_right_ananai = new Sprite(16, 32);
        
        Blaze_Angel_right_ananai.image = game.assets['img/Blaze_Torch_Lit.gif'];
        Blaze_Angel_right_ananai.x = 10 * 43;
        Blaze_Angel_right_ananai.y = 10 * 68;
        Blaze_Angel_right_ananai.opacity = 1;


        let Blaze_Angel_left_ananai = new Sprite(16, 32);
        
        Blaze_Angel_left_ananai.image = game.assets['img/Blaze_Torch_Lit.gif'];
        Blaze_Angel_left_ananai.x = 10 * 31;
        Blaze_Angel_left_ananai.y = 10 * 68;
        Blaze_Angel_left_ananai.opacity = 1;







        
        








        //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        //Déesse IZANAMI AQUARIUS VENUS ######################################""
        

        let Aquarius_spirit = new Sprite(64, 103);
        Aquarius_spirit.image = game.assets['img/Izanami.gif'];
        Aquarius_spirit.x = 10 * 103;
        Aquarius_spirit.y = 10 * 24;
        Aquarius_spirit.opacity = 0;

        let Izanami = new Sprite(128, 128);
        Izanami.image = game.assets['img/Iris.gif'];
        Izanami.x = 10 * 10;
        Izanami.y = 10 * 57;
        Izanami.opacity = 0;



        let Blue_statue = new Sprite(26, 41);
        Blue_statue.image = game.assets['img/Venus_Statue_Blue.gif'];
        Blue_statue.x = 10 * 75;
        Blue_statue.y = 0;
        Blue_statue.opacity = 1;



        let Red_statue = new Sprite(26, 41);
        Red_statue.image = game.assets['img/Venus_Statue_Red.gif'];
        Red_statue.x = 10 * 20;
        Red_statue.y = 10 * 67;
        
        
        
        let Yellow_statue = new Sprite(26, 41);
        Yellow_statue.image = game.assets['img/Venus_Statue_Yellow.gif'];
        Yellow_statue.x = 10 * 36;
        Yellow_statue.y = 10 * 67;
        



        let sign_shop = new Sprite(15, 23);
        sign_shop.image = game.assets['img/sign2.gif'];
        sign_shop.x = 10 * 66;
        sign_shop.y = 10 * 23;
           
        let sign_phenix = new Sprite(16, 23);
        sign_phenix.image = game.assets['img/sign3.gif'];
        sign_phenix.x = 10 * 67;
        sign_phenix.y = 10 * 39;



        let Dragon_Statue = new Sprite(61, 55);
        Dragon_Statue.image = game.assets['img/Dragon.gif'];
        Dragon_Statue.x = 10 * 40;
        Dragon_Statue.y = 10 * 48;
        


        let Mars_Statue = new Sprite(32, 64);
        Mars_Statue.image = game.assets['img/Mars_Statue.gif'];
        Mars_Statue.x = 10 * 103;
        Mars_Statue.y = 10 * 20;

        let Saint = new Sprite(32, 32);
        Saint.image = game.assets['img/Menardi_Walk_Up.gif'];
        Saint.x = 10 * 76;
        Saint.y = 10 * 40;
        


        // let sign = new Sprite(16, 23);
        // sign.image = game.assets['img/sign3.gif'];
        // sign.x = 10 * 69;
        // sign.y = 10 * 68;



        let sign_castle = new Sprite(19, 25);
        sign_castle.image = game.assets['img/sign.gif'];
        sign_castle.x = 10 * 45;
        sign_castle.y = 10 * 14;

        let sign2 = new Sprite(19, 25);
        sign2.image = game.assets['img/sign.gif'];
        sign2.x = 10 * 94;
        sign2.y = 10 * 47;
            




        let Tiamat = new Sprite(74, 95);
        Tiamat.image = game.assets['img/Procne.gif'];
        Tiamat.x = 10 * 82;
        Tiamat.y = 10 * 31;








        //SACRED VILLAGE



        let Chief_village = new Sprite(16, 32);
        Chief_village.image = game.assets['img/Villager7.gif'];
        Chief_village.x = 10 * 104;
        Chief_village.y = 10 * 16;





        let Felix_Situp = new Sprite(21, 29);
        Felix_Situp.image = game.assets['img/Felix_Situp.gif'];
        Felix_Situp.x = 10 * 68;
        Felix_Situp.y = 10 * 17;



         
        let fallen_Sheba = new Sprite(24, 27);
        fallen_Sheba.image = game.assets['img/fallen_Sheba.gif'];
        fallen_Sheba.x = 10 * 8;
        fallen_Sheba.y = 10 * 56;






        let Big_Stump2 = new Sprite(28, 19);
        Big_Stump2.image = game.assets['img/Big_Stump2.gif'];
        Big_Stump2.x = 10 * 68;
        Big_Stump2.y = 10 * 14;
       



        //#####################################
        ///AQUARIUS TEMPLE



        let TorchAqua = new Sprite(15, 31);
        TorchAqua.image = game.assets['img/Shell_Torch.gif'];
        TorchAqua.x = 10 * 102;
        TorchAqua.y = 10 * 27;



        let Jar_Aquarius = new Sprite(15, 31);
        Jar_Aquarius.image = game.assets['img/jar5.gif'];
        Jar_Aquarius.x = 10 * 100;
        Jar_Aquarius.y = 10 * 26;
       
        let Jar_Aquarius_statue = new Sprite(15, 31);
        Jar_Aquarius_statue.image = game.assets['img/jar5.gif'];
        Jar_Aquarius_statue.x = 10 * 96;
        Jar_Aquarius_statue.y = 10 * 32;
        Jar_Aquarius_statue.opacity = 0.89;
       
       
               
       
        let aquarius_statue = new Sprite(19, 43);
        aquarius_statue.image = game.assets['img/Mercury_Statue.gif'];
        aquarius_statue.x = 10 * 96;
        aquarius_statue.y = 10 * 28;



         
        let Pillar_Aquarius = new Sprite(32, 64);
        Pillar_Aquarius.image = game.assets['img/Ice_Pillar.gif'];
        Pillar_Aquarius.x = 10 * 102;
        Pillar_Aquarius.y = 10 * 23;
        Pillar_Aquarius.opacity = 0.3;
            
        let Pillar_Aquarius_left = new Sprite(32, 64);
        Pillar_Aquarius_left.image = game.assets['img/Ice_Pillar.gif'];
        Pillar_Aquarius_left.x = 10 * 95;
        Pillar_Aquarius_left.y = 10 * 23;
        Pillar_Aquarius_left.opacity = 0.3;

        let Pillar_Aquarius_secret_enter = new Sprite(32, 64);
        Pillar_Aquarius_secret_enter.image = game.assets['img/Ice_Pillar.gif'];
        Pillar_Aquarius_secret_enter.x = 10 * 97;
        Pillar_Aquarius_secret_enter.y = 10 * 35;
        Pillar_Aquarius_secret_enter.opacity = 0.7;





             
        let Pillar_Aquarius_down_right = new Sprite(32, 64);
        Pillar_Aquarius_down_right.image = game.assets['img/Ice_Pillar.gif'];
        Pillar_Aquarius_down_right.x = 10 * 102;
        Pillar_Aquarius_down_right.y = 10 * 48;
        Pillar_Aquarius_down_right.opacity = 0.43;

        let Pillar_Aquarius_down_left = new Sprite(32, 64);
        Pillar_Aquarius_down_left.image = game.assets['img/Ice_Pillar.gif'];
        Pillar_Aquarius_down_left.x = 10 * 98;
        Pillar_Aquarius_down_left.y = 10 * 48;
        Pillar_Aquarius_down_left.opacity = 0.4;


       
       
       
      






        
        
        //LOOTS & items quest


        let knowledge_stone = new Sprite(13, 13);
        knowledge_stone.image = game.assets['img/Hail.gif'];
        knowledge_stone.x = 10 * 75;
        knowledge_stone.y = 0;
        knowledge_stone.opacity = 0;

      
        let crown = new Sprite(16, 16);
        crown.image = game.assets['img/9.png'];
        crown.x = 10 * 78;
        crown.y = 10 * 6;

        let graal = new Sprite(16, 16);
        graal.image = game.assets['img/6.png'];
        graal.x = 10 * 80;
        graal.y = 10 * 5;

        let castle_key = new Sprite(16, 16);
        castle_key.image = game.assets['img/Prison_Key.gif'];
        castle_key.x = 10 * 84;
        castle_key.y = 10 * 42;
        castle_key.opacity = 0;












        //VILLAGE


        let Menardi_Small = new Sprite(20, 27);
        Menardi_Small.image = game.assets['img/Menardi_Small.gif'];
        Menardi_Small.x = 10 * 40;
        Menardi_Small.y = 10 * 45;

        let blue_man = new Sprite(32, 32);
        blue_man.image = game.assets['img/Prox_Villager5.gif'];
        blue_man.x = 10 * 30;
        blue_man.y = 10 * 42;


        let Grave_ancient_king = new Sprite(15, 16);
        Grave_ancient_king.image = game.assets['img/grave1.gif'];
        Grave_ancient_king.x = 10 * 41;
        Grave_ancient_king.y = 10 * 60;







        /////////////#####################################
        //HOUSE PLAYER#####################################



        let Yallam_House = new Sprite(64, 64);
        Yallam_House.image = game.assets['img/Yallam_House.gif'];
        Yallam_House.x = 10;
        Yallam_House.y = 10;


        let Golden_Chocobo = new Sprite(31, 43);
        Golden_Chocobo.image = game.assets['img/chocobo.gif'];
        Golden_Chocobo.x = 10 * 10;
        Golden_Chocobo.y = 10;
        // Golden_Chocobo.opacity.Math.Floor(Math.random(0.2) * Math.floor(1))


        let Chocobo_water = new Sprite(22, 24);
        Chocobo_water.image = game.assets['img/big_basket_wtr.gif'];
        Chocobo_water.x = 10 * 11;
        Chocobo_water.y = 10 * 5;


        let Golden_Chocobo_Food = new Sprite(16, 14);
        Golden_Chocobo_Food.image = game.assets['img/basket1.gif'];
        Golden_Chocobo_Food.x = 10 * 7;
        Golden_Chocobo_Food.y = 10 * 4;
        Golden_Chocobo_Food.scaleX = Math.sin(40);


        let Flag = new Sprite(14, 14);
        Flag.image = game.assets['img/Condemn.gif'];
        Flag.x = 8;
        Flag.y = 11;


        let sack1 = new Sprite(15, 14);
        sack1.image = game.assets['img/sack1.gif'];
        sack1.x = 10* 7;
        sack1.y = 10 * 6;


        let Woodpile1 = new Sprite(13, 16);
        Woodpile1.image = game.assets['img/woodpile3.gif'];
        Woodpile1.x = 0;
        Woodpile1.y = 10 * 8;



        let Hay_Bundle = new Sprite(24, 16);
        Hay_Bundle.image = game.assets['img/Hay_Bundle.gif'];
        Hay_Bundle.x = 3 * 23;
        Hay_Bundle.y = 10 * 56;
 







        //HOUSE STORAGE


         
        let Apojihouse = new Sprite(80, 103);
        Apojihouse.image = game.assets['img/Apojii_House.gif'];
        Apojihouse.x = 10 * 80;
        Apojihouse.y = 10 * 10;

        
        let Yallam_Blacksmith2 = new Sprite(104, 88);
        Yallam_Blacksmith2.image = game.assets['img/Yallam_Blacksmith.gif'];
        Yallam_Blacksmith2.x = 10 * 34;
        Yallam_Blacksmith2.y = 10 * 38;


            //Rock village
        let Yallam_Blacksmith = new Sprite(104, 88);
        Yallam_Blacksmith.image = game.assets['img/Yallam_Blacksmith.gif'];
        Yallam_Blacksmith.x = 10 * 20;
        Yallam_Blacksmith.y = 10 * 38 ;
        


        let Yallam_Inn = new Sprite(96, 80);
        Yallam_Inn.image = game.assets['img/Yallam_Inn.gif'];
        Yallam_Inn.x = 10 * 15; 
        Yallam_Inn.y = 10 * 45;


        let flame = new Sprite(10, 16);
        flame.image = game.assets['img/flame.gif'];
        flame.x = 10 * 27;
        flame.y = 10 * 72;

        let Theif_Right = new Sprite(32, 32);
        Theif_Right.image = game.assets['img/Theif.gif'];
        Theif_Right.x = 10 * 10;
        Theif_Right.y = 10 * 40;

        let shop = new Sprite(160, 128); 
        shop.image = game.assets['img/Apojii_Inn_Shop.gif'];
        shop.x = 10 * 90;
        shop.y = 1;


        let barrel7 = new Sprite(15, 15);
        barrel7.image = game.assets['img/barrel7.gif'];
        barrel7.x = 10 * 60;
        barrel7.y = 10 * 13;

    



        let oldman = new Sprite (17, 26);
        oldman.image = game.assets['img/Villager-2.gif'];
        oldman.x = 14 * 19;
        oldman.y = 12 * 40;


        let Oven_rock_village = new Sprite (30, 22);
        Oven_rock_village.image = game.assets['img/oven.gif'];
        Oven_rock_village.x = 14 * 10;
        Oven_rock_village.y = 12 * 42;






        let Tired_Chocobo = new Sprite (34, 33);
        Tired_Chocobo.image = game.assets['img/yellow_chocobo_weak.gif'];
        Tired_Chocobo.x = 10 * 3;
        Tired_Chocobo.y = 12 * 38;
        Tired_Chocobo.scaleX = Math.sin(30);

        // let Facial_agitated_expression_chocobo = new Sprite (16, 16);
        // Facial_agitated_expression_chocobo.image = game.assets['img/agitated.gif'];
        // Facial_agitated_expression_chocobo.x = 14 * 3;
        // Facial_agitated_expression_chocobo.y = 12 * 37;
        // Facial_agitated_expression_chocobo.opacity = 0.4;


        let Up_Chocobo = new Sprite(31, 43);
        Up_Chocobo.image = game.assets['img/chocobo.gif'];
        Up_Chocobo.x = 10 * 3;
        Up_Chocobo.y = 12 * 38;
        Up_Chocobo.opacity = 0;
        Up_Chocobo.scaleX = Math.sin(30);




        let Food_Chocobo = new Sprite(22, 23);
        Food_Chocobo.image = game.assets['img/Fruit_Basket.gif'];
        Food_Chocobo.x = 10 * 17;
        Food_Chocobo.y = 10 * 52;
        Food_Chocobo.opacity = 1;








        //####################################################
        //BOOK END GAME #######################################


        let book = new Sprite(16, 16);
        book.image = game.assets['img/book.gif'];
        book.x = 10 * 102;
        book.y = 10 * 76;
        book.opacity = 0;

        let Growth = new Sprite(14, 14);
        Growth.image = game.assets['img/Growth.gif'];
        Growth.x = 10 * 100;
        Growth.y = 10 * 73;
        Growth.opacity = 0;
        
        
        
        
        





        
        
        //excalibur


        let sword = new Sprite(7, 16);
        sword.image = game.assets['img/sword3.gif'];
        sword.x = 10 * 68;
        sword.y = 10 * 4;

        
        let treasure = new Sprite(16, 16);
        treasure.image = game.assets['img/8.png'];
        treasure.x = 10 * 80;
        treasure.y = 10 * 7;
        

   
        let Sunflower = new Sprite(32, 32);
        Sunflower = game.assets['img/monster6.gif'];
        Sunflower.x = 10 * 4;
        Sunflower.y = 10 * 13;
        

        let piece = new Sprite(16, 16);
        piece.image = game.assets['img/1.png'];
        piece.x = 10 * 25;
        piece.y = 10 * 35;
        






        // open door soldier

        let piece2 = new Sprite(16, 16);
        piece2.image = game.assets['img/1.png'];
        piece2.x = 10 * 63;
        piece2.y = 10 * 35;
        
        
        
        














        //Player control...
        
        
        
        let player = new Sprite(32, 32);
        player.x = 10 * 3; // positionnement en x sur le canvas
        player.y = 10 * 10; // positionnement en y sur le canvas
        let image = new Surface(96, 128); // création d'une surface d'affichage 
        image.draw(game.assets['img/chara6.png'], 96, 0, 96, 128, 0, 0, 96, 128); // dessine, ajoute l'image au jeu et positionne (récupération en x de l'image , en y, sizepix, surface en pix, repeat)  ) 
        player.image = image; // .image framework keyword pour dessiner le sprite sur la surface definie
        player.walk = 1; // .walk key framework déplacement par frame
       
       

        let playerSpeed = 10; // Number of pixels to move the sprite each frame.
        

        //right/left  création d'un event en entrée  de frame de bouger le sprite
        player.addEventListener(Event.ENTER_FRAME, function () {
            this.frame = this.direction * 3 + this.walk; //  changement d'image  a chaque frame du jeu en lancement du sprite 
            
            // game.input =  input du jeu 
            // this.direction : selection de la direction du  sprite  par rapport au différentes image des personnages   
            // !game.input si on  entre pas d'input 0 move
            // !game.frame si il n'ya pas de frame par le déplacement du personnage 
            // 
            if (!game.input) {
                this.walk %= 0;
            }
            
            if (game.input.right && !game.input.left) {
                this.direction = 6;
                player.x += playerSpeed; 
                if (map.hitTest(player.x + 8, player.y + 8)) {
                    player.x -= playerSpeed;
                }
                if (!(game.frame % 3)) {
                    this.walk++;
                    this.walk %= 3;
                }

                //délimitation de déplacement du joueur par rapport à la taille du game 
                if (player.x > game.width - player.width) {
                    player.x = game.width - player.width;
                }
    
            
            } else if (game.input.left && !game.input.right) {
                this.direction = 5;
                player.x -= playerSpeed;
                
                // map.hitest: paramètre des collisions du canvas par rapport à l'objet player en x et y  
                if (map.hitTest(player.x + 8, player.y + 8)) {
                   player.x += playerSpeed;
                }
                // synchronisation frame du jeu et changement de sprite à chaque frame
                if (!(game.frame % 3)) {
                    this.walk++;      // incrémentation 
                    this.walk %= 3;
                }
               
                //délimitation sortie du canvas
                if (player.x < 0) {
                player.x = 0;
            
                }
            }


            //up/down
            if (game.input.down && !game.input.up) {
                this.direction = 4;
                player.y += playerSpeed;

                if (map.hitTest(player.x + 8, player.y + 8)) {
                    player.y -= playerSpeed;
                }
                if (!(game.frame % 3)) {
                    this.walk++;
                    this.walk %= 3;
                }
                
                if (player.y > game.height - player.height) {
                    player.y = game.height - player.height;
                }
                if (player.y < 0){
                    player.y = 0;
                }
               


            } else if (game.input.up && !game.input.down) {
                this.direction = 3;
                player.y -= playerSpeed;
                if(map.hitTest(player.x + 8, player.y + 8)) {
                    player.y += playerSpeed;
                }
                if(!(game.frame % 3)) {
                    this.walk++; 
                    this.walk %= 3;
                }
                // if (player.y > game.height - player.height) {
                //     player.y = game.height - player.height;
                // }

                if(player.y < 0){
                    player.y = 0;
                }
            } 

        });














        //Soldier control  soldier


        let soldier1 = new Sprite(32, 32);
        soldier1.speed = 5;
        soldier1.x = 20 * 27;
        soldier1.y = 10 * 12;
        soldier1.image = game.assets['img/chara5.png'];
        // soldier1.move = true;
        soldier1.walk = 1;
        


        soldier1.addEventListener(Event.ENTER_FRAME, function () {
            this.frame = this.direction + this.walk;
            if(game.frame%2){

                this.x += 2;
                this.walk++; //test
                this.walk %=2;
                this.direction = 10; 

            
            
            if (map.hitTest(soldier1.x -16 , soldier1.y - 16)) {
                this.x -= 2;
                this.walk++;
                // this.walk %= 0;
                this.direction = 2;

            }
            else {
                this.x -= soldier1.speed;
                
            }

            if (soldier1.x > game.width - soldier1.width) {
                soldier1.x = game.width - soldier1.width;
                }
            }
           
            
        });
        
        


        let soldier2 = new Sprite(32, 32); 
        soldier2.image = game.assets['img/chara5.png'];
        soldier2.speed = 5; 
        soldier2.x = 10 * 69;
        soldier2.y = 10 * 1;
        soldier2.walk = 1;

        soldier2.addEventListener(Event.ENTER_FRAME, function(){
            this.frame = this.direction + this.walk;

            if(game.frame%2){

                this.y += 2;
                this.walk++;
                this.walk %=2;
                this.direction = 1;
                if(map.hitTest(soldier2.x +16, soldier2.y +16)){
                    this.y -= 2;
                    this.walk++;
                    // this.walk%= 0;
                    this.direction = 12;
                    
                }
               
            
            
            }


        });






        let soldier3 = new Sprite(32, 32); 
        soldier3.image = game.assets['img/chara5.png'];
        soldier3.speed = 5;
        soldier3.speed = 3 ; 
        soldier3.x = 10 * 97;
        soldier3.y = 10 * 41;
        soldier3.walk = 1;

        soldier3.addEventListener(Event.ENTER_FRAME, function(){


            // if(map.hitTest(soldier3.x +16, soldier3.y +16)){
            //     // soldier3.y -= soldier3.speed;
            //     soldier3.walk %= 0;
            //     // soldier3.x -= soldier3.speed;
            //     soldier3.x  += soldier3.speed;
            //     soldier3.y -= 2;
             
             

            // } 





        });






        let soldier4 = new Sprite(32, 32); 
        soldier4.image = game.assets['img/chara5.png'];
        soldier4.speed = 3 ; 
        soldier4.x = 10 * 97;
        soldier4.y = 10 * 48;
        soldier4.direction = 10;


        soldier4.addEventListener(Event.ENTER_FRAME, function(){
             this.frame = this.direction;
            if(map.hitTest(soldier4.x -32, soldier4.y -32)){
                soldier4.direction = 13;

            }


        });
        
        

        let soldier5 = new Sprite(32, 32); 
        soldier5.image = game.assets['img/chara5.png'];
        soldier5.speed = 3 ; 
        soldier5.x = 10 * 35;
        soldier5.y = 10 * 34;
        soldier5.direction = 10; 





        let monster1 = new Sprite(32, 96);
        monster1.x = 20; // positionnement en x sur le canvas
        monster1.y = 10 * 20; // positionnement en y sur le canvas
        monster1 = game.assets['img/monster6.gif'];
        // let image2 = new Surface(96, 128); // création d'une surface d'affichage 96 , 128 player
        // image.draw(game.assets['img/monster6.gif'],0, 0, 96, 128, 96, 96, 96, 0); // dessine, ajoute l'image au jeu et positionne (récupération en x de l'image , en y, sizepix, surface en pix, repeat)  ) 
        // monster1.image2 = image2; // .image framework keyword pour dessiner le sprite sur la surface definie
      



        








       
        //LABEL Setting


        let label = new Label();



        label.text = "Du Néant naquit Gaïa la terre mère, une énergie créatrice sans limites dépourvue de penser, pour l'accompagner Gaïa engendra Aquarius déesse de l'espace, du temps et du savoir qui créa le ciel et les premières étoiles. Afin d'équilibrer cette puissance, Aquarius m'y en place la dualité et 2 mondes celui des anges et démons. Mètis la première fût chargé de guider le royaume des anges. Izanami a été destiné au royaume des démons. Chacune façonnèrent une relique stabilisant leur monde.";
        label.width = 320;
        label.height = 350;
        label.color = 'rgb(13,  2,  6)';//'rgb(255,255, 255)';
        label.font = "italic 13px Comics sans-serif";
        label.x = 10 * 19;
        label.y = 10 * 17;


        

        let info = new Label("");

      
        info.backgroundcolor = 'rbg(255,255,255)';
        info.width = 270;
        info.height = 160;
        info.color = 'rgb(34, 11, 145)';//'rgb(255,255, 255)';
        info.font = "italic 13px Comics sans-serif";
        info.x = 160;
        info.y = 10 ;
        info.opacity = 1;
     




       

        game.keybind(122, 'up');     // 87 is the ASCII code for 'W'.
        game.keybind(113, 'left');   // 65 is the ASCII code for 'A'.
        game.keybind(115, 'down');   // 83 is the ASCII code for 'S'.
        game.keybind(111, 'right');












        //Instance objet Group game

        //addchild : ajoute les objets dans le group map 

        let stage = new Group();
        
        
        stage.addChild(map);
        stage.addChild(player);


        //Silence quest
        stage.addChild(silence_yoda);
        stage.addChild(silence_chief);
        stage.addChild(silence_chaman);
        stage.addChild(silence_Statue_Aquarius);
        stage.addChild(silence_Cupidon);
        stage.addChild(silence_Husim);
        stage.addChild(silence_flame);
        
        
        



        //exclamatory quest 

        stage.addChild(excla_yoda);
        stage.addChild(excla_yoda_2);
        
        stage.addChild(excla_chaman);
        stage.addChild(excla_chaman_2);

        stage.addChild(excla_Hino);
        stage.addChild(excla_Jenna);
        
        stage.addChild(excla_chief);
        stage.addChild(excla_warrior);
        stage.addChild(excla_Sainte);
        stage.addChild(excla_Phenix);
        stage.addChild(excla_Aquarius);
        stage.addChild(excla_Nehemiel);
        stage.addChild(excla_Ananai);
        stage.addChild(excla_Izanami);
        stage.addChild(excla_Pillar);
        
        
       


        //inter quest 

        stage.addChild(inter_brother_sainte);
        stage.addChild(inter_aquarius);
        

        // TP ring

        stage.addChild(Tp_hell);
      
        

        // KNOWLEDGE FOREST


        stage.addChild(Knowledge_tree);
        stage.addChild(Guardian_tree);
        stage.addChild(Growth);
        stage.addChild(Gaia_statue);
        stage.addChild(Little_Ent);
        stage.addChild(Baby_Ent);
        
        stage.addChild(Pillar_Forest);
        stage.addChild(Pillar_Forest_enter);
        stage.addChild(Pillar_Forest_south);
        
        
        



        

        //soldier !!!!!!!!!!!!!!!!!!!!!!
        stage.addChild(soldier1);
        stage.addChild(soldier2);
        stage.addChild(soldier3);
        stage.addChild(soldier4);

        stage.addChild(Big_Stump2);
        stage.addChild(sign2);
        stage.addChild(treasure);
        stage.addChild(shop);

        //Loots Items quest !!!!!!!!!!!!

        stage.addChild(piece);
        stage.addChild(piece2);
        stage.addChild(castle_key);
        stage.addChild(knowledge_stone);
        

        //castle fashion !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        stage.addChild(banner_castle);
        stage.addChild(crown);
        stage.addChild(graal);
        stage.addChild(blazT);
        stage.addChild(barrel7);
        stage.addChild(flame);
        stage.addChild(King_Chair);
        
        
        //middle ???????????????????

        stage.addChild(ElBarto);
        stage.addChild(Teepee);
        stage.addChild(Saint);
        stage.addChild(King);
        stage.addChild(Well);

        stage.addChild(imgskull);
        stage.addChild(Pillar1);
        stage.addChild(flower);
       


        //###########################
        // Angel Sanctuary 

        stage.addChild(Angel_statue);
        stage.addChild(Cupidon);    
        stage.addChild(Husim);
        stage.addChild(Nehemiel);
        stage.addChild(Tears_God);

        //TORCH TEMPLE
        stage.addChild(Blaze_Angel_right_ananai);
        stage.addChild(Blaze_Angel_left_ananai);
        
       



        
        //GODS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

        stage.addChild(Aquarius_spirit);
        stage.addChild(Izanami);
        stage.addChild(Blue_statue);
        stage.addChild(Red_statue);
        stage.addChild(Yellow_statue);
        
        stage.addChild(King_Statue);
        stage.addChild(Queen);
        stage.addChild(Tiamat);
        stage.addChild(Dragon_Statue);
        stage.addChild(Mars_Statue);
        stage.addChild(sign_castle);



       

        //sorcerer
        

        stage.addChild(Sorcerer);
        stage.addChild(sign_phenix);
        stage.addChild(sign_shop);
        stage.addChild(fallen_Sheba);
        // stage.addChild(sign);
        stage.addChild(kolima_shop);
        stage.addChild(aquarius_statue);
        stage.addChild(book);
        stage.addChild(Theif_Right);
        stage.addChild(Felix_Situp);
        stage.addChild(blue_man);
        stage.addChild(Menardi_Small);
        stage.addChild(Jenna);
       
        stage.addChild(Jar);
        stage.addChild(Chicken);
        stage.addChild(Chicken2);
        stage.addChild(Sheep_sacred_village);
        stage.addChild(Sheep_sacred_village_Sin);
        stage.addChild(Sheep_sacred_village_Sin2);
        

        stage.addChild(Oven_rock_village);
       
       
        stage.addChild(Round_Rug2);
        
        //PNG c'est le bordel
        stage.addChild(Chief_village);
        stage.addChild(Chaman);
        stage.addChild(Ishtar_Statue);
        stage.addChild(sign2);
        stage.addChild(Sea_barrel);
        
        //################################################
        //HOUSE PLAYER & ITEMS && HOUSES MAP
        stage.addChild(Apojihouse);
        stage.addChild(Flag);
        stage.addChild(Golden_Chocobo);
        stage.addChild(Golden_Chocobo_Food);
        
        stage.addChild(Tired_Chocobo);
        // stage.addChild(Facial_agitated_expression_chocobo);
        
        stage.addChild(Up_Chocobo);
        stage.addChild(Food_Chocobo);
        
        stage.addChild(Grave_ancient_king);
        
        
        stage.addChild(Chocobo_water);
        
        stage.addChild(sack1);
        stage.addChild(Woodpile1);
        stage.addChild(Yallam_House);
        stage.addChild(Venus_Statue);
        stage.addChild(Hay_Bundle);
        stage.addChild(Yallam_Inn);
        stage.addChild(Yallam_Blacksmith);
        stage.addChild(Yallam_Blacksmith2);
        stage.addChild(Sunflower);
      
        stage.addChild(Oven_sacred_village);
        
        



        //#######################################
        // AQUARIUS TEMPLE #######################
        stage.addChild(TorchAqua);
        stage.addChild(Jar_Aquarius);
        stage.addChild(Jar_Aquarius_statue);
        
        stage.addChild(Pillar_Aquarius);
        stage.addChild(Pillar_Aquarius_left);
        stage.addChild(Pillar_Aquarius_secret_enter);
        
        stage.addChild(Pillar_Aquarius_down_right);
        stage.addChild(Pillar_Aquarius_down_left);
  
        



        //label etc
        stage.addChild(label);
        stage.addChild(info);
        

      
        stage.addChild(sword);
        
        stage.addChild(oldman);
        stage.addChild(Turtle);
        stage.addChild(Yi);
        stage.addChild(tiedup_villager);
        stage.addChild(Warrior);
        stage.addChild(monster1);
        // stage.addChild(soldier5);
        
        //no comment
        stage.addChild(Lose);
        

        game.rootScene.addChild(stage);

















        //Utilisation de la variable magic stage !!
        //ajout d'un event entrée de la première scene du jeu pour le label 
        //label: création de surface de text 


        stage.addEventListener(Event.ENTER_FRAME, function () {
            // fade label out until it's invisible
            if (label.opacity > 0.15) {
                label.opacity -= 0.015;
            }
            else {
                stage.removeChild(label);
            }
        });






        stage.addEventListener('enterframe', function(){
           
           
           
         
           
           
            if(player.within(Dragon_Statue, 16)){
                
                // soldier2.frame = soldier2.direction; 
               

                console.log("Regardez vers les étoiles et pas vers vos pieds. Essayez de donner un sens à ce que vous voyez, et demandez-vous ce qui fait que l'univers existe. Soyez curieux.-> Stephen Hawking");
            
            
            
        }
           
           
           
            if(player.within(Pillar1, 16)){
                
               let pillar_message ="Stone:L'homme est un accident de parcours, dans un cosmos vide et froid. Il est un enfant du hasard."

               console.log(pillar_message);
                

               
                  
               
              
        } 
        
          
        
        //     if(player.within(Chaman, 16)){
            
        //      console.log("Chaman-Yallam: Ishtar est une divinité astrale qui est identifiée à la planète Vénus, l'étoile du matin et du soir");
             
        //      console.log("Chaman-Yallam: Pourquoi se battre pour des croyances ?!");
         
        //  }
        
        
          
        
        });
       

        
        //ajout de l' écoute d'un event 
        //enterframe : En entrée de frame déploiement de la function 
        
        //within : si un objet intercepte un autre objet 




        // Passage secret du château 




        
        stage.addEventListener('enterframe', function(){
            if(player.within(Pillar1, 16)){
                 
                let pillar_message ="Stone:L'homme est un accident de parcours, dans un cosmos vide et froid. Il est un enfant du hasard."

                console.log(pillar_message);

            }
        });
        
        
        stage.addEventListener('enterframe', function(){
            if(player.intersect(ElBarto, 32)){
                console.log("ElBarto: Ne te soucies pas, de ne pas être remarqué. Cherche plutôt à faire quelque chose de remarquable.");
                console.log("ElBarto: On a toujours à apprendre des autres, même quand on le sait déjà.");
            
            }
        });
        
        
        
     


        



        stage.addEventListener('enterframe', function(){
            
            if(player.within(Yi, 8)){
                
            console.log("YI: Si tu cherches un moyen de rentrer dans le château, je connais un passage secret, au Nord-Ouest");
                
                                
                
            }
            
            
            if(player.within(King, 32)){
                stage.removeChild(player);
                console.log("King: my wife's lover!!");
                console.log("You has been kill by the King!");
                
            }
        });









        //######################################################################
        //END GAME Open Aquarius Sanctuary######################################


        stage.addEventListener('enterframe', function(){
            
            if(player.within(Tiamat, 25)) {
               
                stage.removeChild(excla_Phenix);


            if(game.frame%4){

                soldier3.frame = soldier3.direction * 3 + soldier3.walk;
                soldier3.x += 2;
                soldier3.y += 2;
                soldier3.walk++;
                soldier3.walk %= 2;
                soldier3.direction = 19;
                if(map.hitTest(soldier3.x +32, soldier3.y +32)){
                    
                    soldier3.walk %= 1;
                    soldier3.x -= 2;
                    soldier3.y -= 2;
                    soldier3.direction = 15;
         

                }else{
                    soldier3.x += soldier3.speed;
                    soldier3.y += soldier3.speed;
                }



            }

        
          
        }

       

        });




        stage.addEventListener('enterframe', function(){


            if(player.within(soldier3, 26)){
                
                player.x -= 3;
                playerSpeed -= 4;
                
                if(!player.within(soldier3, 26)){

                    playerSpeed = 5;
                    
                
                }


            }





        });




















        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




        ///KICK OUT ENTER



        //Guardian tree Enter 

        stage.addEventListener('enterframe', function(){
            
            
            if(Guardian_tree.within(player, 50)){
              
                
                    player.x -= 3;
                    playerSpeed -= 4;
                    
                    if(!player.within(Guardian_tree, 50)){

                        playerSpeed = 5;
                        
                    }

                    if(Guardian_tree.opacity == 0){

                        player.x += 3;
                        playerSpeed += 4; //keep boost or not for other quests


                        if(!player.within(Guardian_tree, 32)){

                            playerSpeed = 5;
                        

                        }
                    }
                    
            }
        });










        //TEST kick-out Enter Castle 


        stage.addEventListener('enterframe', function(){
            if(soldier1.within(player, 32)){
              
                player.y += 3;
                playerSpeed -= 4;

                if(!player.within(soldier1, 32)){
                    
                    playerSpeed = 5;
                   
                }
              
            }
        });











       
        




        //Kick-out enter aquarius temple





        stage.addEventListener('enterframe', function(){
            
            
            if(soldier4.within(player, -32)){
              
                
                    player.x -= 3;
                    playerSpeed -= 4;
                    
                    if(!player.within(soldier4, 32)){

                        playerSpeed = 5;
                        
                    }

                


            }
        });










        //#########################################################################
        // REST TO DELETE #########################################################




        stage.addEventListener('enterframe', function(){
            
            if(King_Statue.within(player, 16)){
               
                console.log("you has been kill by a Trap");
            }
        });

        stage.addEventListener('enterframe', function(){
            
            if(player.intersect(crown, 8)){
                stage.removeChild(crown);
                console.log("whaa, Tu as obtenu la couronne du roi");
            }
        });
        stage.addEventListener('enterframe', function(){
            
            if(player.intersect(piece2, 32)){
                stage.removeChild(piece2);
                console.log("Pièce d'une ancienne civilisation");
            }
        });
       



        //Excalibur

        stage.addEventListener('enterframe', function(){
            
            if(player.intersect(sword, 8)){
                stage.removeChild(sword);
                console.log("Tu as obtenu l'épée d'Excalibur, L'épée du roi est à toi !!");
            }
        });




      
        
        stage.addEventListener('enterframe', function(){
            
            if(player.intersect(piece, 8)){
                stage.removeChild(piece);
                console.log("une pièce dont la déesse Aquarius est représenté");
            }
        });


















    
        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        // HIDE ITEM QUEST ETC... !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




        stage.addEventListener(Event.ENTER_FRAME, function(){


            //HIDE Excla_quest!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

            // silence_yoda.opacity = Math.random(Math.random(0.7), Math.random(1));
            // excla_yoda.opacity = Math.random(Math.random(0.7), Math.random(1));

            castle_key.scaleX = Math.sin(castle_key.age * 0.1);
            // excla_Hino.opacity = Math.random(Math.random(0.15), Math.random(1), excla_Hino.age * 1);
                
            if(book.opacity == 0){
                stage.removeChild(book);
            }
            if(excla_Hino.opacity == 0){
                stage.removeChild(excla_Hino);

            }
            if(excla_Jenna.opacity == 0){
                stage.removeChild(excla_Jenna);
            }
            if(inter_aquarius.opacity == 0){
                stage.removeChild(inter_aquarius);

                
            }
            if(inter_brother_sainte.opacity == 0){
                stage.removeChild(inter_brother_sainte);

            }
            if(castle_key.opacity == 0){
                stage.removeChild(castle_key);


            }
            if(knowledge_stone.opacity == 0){
                stage.removeChild(knowledge_stone);

            }

            if(silence_chaman.opacity == 0){
                stage.removeChild(silence_chaman);
            }

            if(excla_Phenix.opacity == 0){
                stage.removeChild(excla_Phenix);
            }

            if(knowledge_stone.opacity == 0){
                stage.removeChild(knowledge_stone);
            }

            if(Aquarius_spirit.opacity == 0){
                stage.removeChild(Aquarius_spirit);
            }


            if(excla_Nehemiel.opacity == 0){
                stage.removeChild(excla_Nehemiel);
            }


            if(silence_Cupidon.opacity == 0){
                stage.removeChild(silence_Cupidon);

            }

            if(silence_Husim.opacity == 0){
                stage.removeChild(silence_Husim)


            }
            if(excla_yoda_2.opacity == 0){
                stage.removeChild(excla_yoda_2);

            }

            if(excla_chaman_2.opacity == 0){
                stage.removeChild(excla_chaman_2);

            }

            if(excla_Ananai.opacity == 0){
                stage.removeChild(excla_Ananai);
            }

            if(excla_Izanami.opacity == 0){
                stage.removeChild(excla_Izanami);

            }

            if(Izanami.opacity == 0){
                stage.removeChild(Izanami);
            }

            if(excla_Pillar.opacity == 0){
                stage.removeChild(excla_Pillar);
            }

            if(Lose.opacity == 0){
                stage.removeChild(Lose);


            }
           

            
        });



        
        stage.addEventListener('enterframe', function(){
            
            //Chocobo hs quest #Faire quelque chose sans rien n'attendre en retour...



            if(player.within(Food_Chocobo, 32)){
                Food_Chocobo.opacity = 0;


            }
            
            if(player.within(Tired_Chocobo, 32)){
              

                if(Food_Chocobo.opacity === 0){

                    Food_Chocobo.x = 10 * 6;
                    Food_Chocobo.y = 10 * 48;
                    Food_Chocobo.opacity = 1;
                }
                if(Food_Chocobo.within(Tired_Chocobo, 32)){

                    Tired_Chocobo.opacity = 0;
                    
                    if(Tired_Chocobo.opacity == 0){
                        Up_Chocobo.opacity = 1;

                    }

                }




            }




            // Hino Jenna Quest  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!                           
            
            if(excla_yoda.opacity === 1 && excla_chief.opacity === 1){
                if(player.within(oldman, 32) && excla_Hino.opacity === 0){
                
                    excla_yoda.opacity = 0;
                    stage.addChild(excla_Hino);
                    if(excla_Hino.opacity == 0){
                       
                        excla_Hino.opacity = 1;
                        // excla_Hino.opacity = Math.random(Math.random(0.7), Math.random(1));
            
                        
                    }
                }
            }
            if(player.within(Theif_Right, 32)){
                stage.removeChild(excla_Hino);

            }

            

            if(player.within(Chief_village, 32)){
                stage.addChild(excla_Jenna);
                
               
                if(excla_yoda.opacity === 1 && excla_chaman.opacity === 0){
                    
                   if(excla_Jenna.opacity == 0){
                    excla_Jenna.opacity = 1;
                    
                    excla_chief.opacity = 0;
                   }
                }
                if(silence_yoda.opacity === 1 && excla_yoda.opacity === 0){
                   excla_chaman.opacity = 1;
                   excla_chief.opacity = 0;

                }

    
                    
            }
                
         
            
             if(player.within(Jenna, 32)){

                stage.removeChild(excla_Jenna);

             }
         
        });



        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //Chaman excla Quest !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


        stage.addEventListener('enterframe', function(){

        
                 
        if(excla_yoda.opacity === 0 && excla_chief.opacity === 0){
    
                
                if(excla_chaman.opacity == 0){
                    excla_chaman.opacity = 1;

                    console.log(excla_chaman);
                        
                }
                if(player.within(Chaman, 32)){

                    stage.removeChild(excla_chaman);
                    stage.addChild(silence_chaman)

                }
    
    
    
            }
    
        });








            //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            //Magician excla -> Sainte !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




        stage.addEventListener('enterframe', function(){

            if(player.within(Chaman, 32)){
                
                excla_warrior.opacity = 1;
                if(silence_chaman.opacity = 0){
                    silence_chaman.opacity = 1;
                }
                

            
            }
            if(player.within(Warrior, 32)){

                silence_chaman.opacity = 0;
                excla_Sainte.opacity = 1;
                stage.removeChild(excla_warrior);
            }
            if(player.within(Saint, 16) && silence_chaman.opacity === 0){

                stage.removeChild(excla_Sainte);
                silence_yoda.opacity = 0;
                silence_chief.opacity = 0;
                silence_yoda.opacity = 0;
                silence_chaman.opacity = 0;
                
                stage.addChild(inter_aquarius); 
                stage.addChild(inter_brother_sainte);
                inter_aquarius.opacity = 1;
                inter_brother_sainte.opacity = 1;
                

              
                oldman.x = 10 * 79;
                oldman.y = 10 * 38;

                Chaman.x = 10 * 75;
                Chaman.y = 10 * 38;

                Warrior.x = 10 * 76;
                Warrior.y = 10 * 37;

                stage.addChild(castle_key);

                castle_key.opacity = 1;
                
                
               

              

            }
            if(player.within(castle_key, 15)){
                
                player.x = 10 * 47;
                player.y = 10 * 2;

                // King_Statue.x += 50;
                King_Statue.moveBy( 0, -20, 2);

                player.opacity = 0.4;
                
                if(!player.within(castle_key, 32)){

                    stage.removeChild(castle_key);

                }
               

            }


        });

       



           

        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //CASTLE QUEST !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


        stage.addEventListener('enterframe', function(){


            if(player.within(Blue_statue, 16) || player.within(tiedup_villager, 16)){

                Chaman.x = 10 * 74;
                Chaman.y = 10 * 67;
                oldman.x = 10 * 76;
                oldman.y = 10 * 68;
                Warrior.x = 10 * 86;
                Warrior.y = 10 * 20;
                

                if(tiedup_villager.opacity === 0 && Blue_statue.opacity === 0){
                    
              
                    stage.addChild(knowledge_stone);
                    
    
    
                    if(knowledge_stone.opacity == 0){
                        knowledge_stone.opacity = 1;
    
                        
                    }
                    if(player.within(knowledge_stone, 16)){
                        
                        player.x = 10 * 70;
                        player.y = 10 * 34;
                        player.opacity = 1;
                        playerSpeed = 5;
                       
                        knowledge_stone.opacity = 0;
                        
                       
                       
                        stage.addChild(excla_Phenix);
                        
                        
        
                        if(excla_Phenix.opacity == 0){
                        
                            excla_Phenix.opacity = 1;
                        }
                        
             
                    
                    }
                    
                }
            }


          
            if(player.within(tiedup_villager, 16)){
                inter_brother_sainte.opacity = 0;
                tiedup_villager.opacity = 0;
                Saint.x = 10 * 84;
                Saint.y = 10 * 22;

                if(tiedup_villager.opacity = 0){
                    stage.removeChild(tiedup_villager);

                }
              
               

            }
            if(player.within(Blue_statue, 16)){
                inter_aquarius.opacity = 0;
                Blue_statue.opacity = 0;
                if(Blue_statue.opacity == 0){
                    stage.removeChild(Blue_statue);
                }

            }

            


        });


        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        //Phenix Quest !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


        stage.addEventListener('enterframe', function(){



            if(player.within(Tiamat, 32)){
                
                stage.removeChild(excla_Phenix);
                stage.addChild(Aquarius_spirit);
                if(Aquarius_spirit.opacity < 1){
                    Aquarius_spirit.opacity += 0.055;


                }
                if(excla_Aquarius.opacity == 0){

                    excla_Aquarius.opacity = 1;
                    
                    console.log(excla_Aquarius);
                }

                // Aquarius_spirit.fadeTo(+ 0.023, 2);
                
            }
        

            if(player.within(Aquarius_spirit, 32)){

                excla_Aquarius.opacity = 0
                if(silence_Statue_Aquarius.opacity == 0){
                    silence_Statue_Aquarius.opacity = 1;

                }
                
                
               


            }
            if(player.within(aquarius_statue, 32)){
                silence_Statue_Aquarius.opacity = 0;

                stage.addChild(excla_Nehemiel);
            
                if(excla_Aquarius.opacity === 0 && silence_Statue_Aquarius.opacity === 0){
                    
                    
                    player.x = 10 * 64;
                    player.y = 10 * 70;
                    // // player.opacity = Math.random(Math.random(1), Math.random(0.7), player.age * 1);
                
                    
                    // if(game.input){
                    //     player.opacity = 1;
    
                    // }
                }
                
                if(excla_Nehemiel.opacity == 0){
                    excla_Nehemiel.opacity = 1;

                }
            
            
            }
          
          
           
        });



        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        // ANGEL's TEMPLE QUEST !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 


        stage.addEventListener('enterframe', function(){



            if(player.within(Nehemiel, 16)){
                stage.addChild(silence_Cupidon);
                stage.addChild(silence_Husim);
            
                excla_Nehemiel.opacity = 0;


                if(silence_Husim.opacity == 0){
                    silence_Husim.opacity = 1;
                }
                if(silence_Cupidon.opacity == 0){
                    silence_Cupidon.opacity = 1;

                }


            }

            if(player.within(Cupidon, 32) && silence_Cupidon.opacity === 1){
                
                silence_Cupidon.opacity = 0;
                
                if(silence_Husim.opacity === 0 && silence_Cupidon.opacity === 0 ){
                    stage.addChild(excla_Ananai);
                    
                    if(excla_Ananai.opacity == 0){
                        excla_Ananai.opacity = 1;
    
                    }
    
                }
                
        
            }

            if(player.within(Husim, 32)){

                silence_Husim.opacity = 0;

            }

           

            if(player.within(Yellow_statue, 32) && silence_Cupidon.within(Cupidon, 32)){

                excla_Ananai.opacity = 0;

                Tears_God.opacity = 0;



                if(excla_Ananai.opacity == 0){

                    stage.removeChild(excla_Ananai);

                }
                if(Tears_God.opacity == 0){
                    stage.removeChild(Tears_God);

                }
                stage.addChild(excla_chaman_2);
                stage.addChild(excla_yoda_2);
                player.x = 10 * 70;
                player.y = 10 * 65;


                if(excla_chaman_2.opacity == 0){
                    excla_chaman_2.opacity = 1;

                }

                if(excla_yoda_2.opacity == 0){
                    excla_yoda_2.opacity = 1;

                }
              

            }



        });



        //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
        // JOURNEY IN HELL !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


        stage.addEventListener('enterframe', function(){

            if(player.within(Chaman, 32) && excla_chaman_2.within(Chaman, 32)){

                excla_chaman_2.opacity = 0;



            }
            
            if(player.within(oldman, 32) && excla_yoda_2.within(oldman, 32)){

                excla_yoda_2.opacity = 0;
               
            }

            
            if(player.within(oldman, 32) && player.within(Chaman, 32)){


                
                if(excla_yoda_2.within(oldman, 32) && excla_chaman_2.within(Chaman, 32)){

                    player.x = 10;                                      //TP hell
                    player.y = 10 * 79;
                    stage.addChild(excla_Izanami);
                    
                    
                    if(excla_Izanami.opacity == 0){
                        excla_Izanami.opacity = 1;

                    }


                }


            }



            if(player.within(Red_statue, 16)){

                stage.addChild(excla_Pillar);
                excla_Izanami.opacity = 0;

                if(excla_Pillar.opacity == 0){
                    excla_Pillar.opacity = 1;
                }




            }

            if(player.within(Pillar1, 32)){

                stage.addChild(Izanami);
                excla_Pillar.opacity = 0;
                
                
                if(Izanami.opacity < 1){
                    Izanami.opacity += 0.019;

                }
                if(silence_flame.opacity == 0){
                    silence_flame.opacity = 1;
                }


            }
            
            if(player.within(flame, 32)){

                player.x = 10 * 70;
                player.y = 10 * 74;

                Chaman.x = 10 * 88;
                Chaman.y = 10 * 12;

                oldman.x = 10 * 25;
                oldman.y = 10 * 50;

                silence_flame.opacity = 0;
                flame.opacity = 0;
                stage.removeChild(excla_Pillar);

                if(flame.opacity == 0){
                    
                    stage.removeChild(flame);
                }
                if(Izanami.opacity > 0 && Aquarius_spirit.opacity > 0){


                    Guardian_tree.opacity = 0;   //TREE OPen
                    
                    if(Guardian_tree.opacity > 0.025){
                        Guardian_tree.opacity -= 0.025;

                        if(Guardian_tree.opacity == 0 ){
                            stage.removeChild(Guardian_tree);
        
                        }

                    }
    
                  
                }



            }
            
            if(player.within(Knowledge_tree, 120)){

                stage.addChild(book);
                
                if(book.opacity == 0){
                    
                    
                    book.opacity = 1;
                   
                
                }
                
            }
            if(player.within(book, 8)){

                if(book.opacity == 1){
                    book.opacity -= 0.75;


                }
                if(flame.opacity == 0){
                    flame.opacity = 1;
                }

                if(Tears_God.opacity == 0){
                    Tears_God.opacity = 1;

                }
                if(Growth.opacity == 0){
                    Growth.opacity += 0.25;
                    

                }
                if(Growth.opacity = 1){
                    game.end();
                }

            }
                   

            if(book.opacity == 1){
                stage.addChild(Lose);
                if(Lose.opacity == 0){
                    Lose.opacity = 1;


                }



            }
        
        });

        
  











        //#############################################################
        //#############################################################
        // object in oject !!! 

    



        //RootScene event -> display text


     
        game.rootScene.addEventListener('enterframe', function(){
            

        
           


            if(player.within(ElBarto, 16)){
                
                let Bandit_str = "ElBarto: Ne te soucies pas, de ne pas être remarqué. Cherche plutôt à faire quelque chose de remarquable.";
                info.text = Bandit_str;

            }




            //Sacred village

            if(player.within(Chief_village, 32)){

                if(excla_yoda.opacity === 1){
                    let start_chief = "Bonjour, Aventurier, une relique de grand pouvoir à été voler par le roi nous devont réunir les sages. Va voir Jenna pour avoir plus d'info";
                    info.text = start_chief;
                }

                if(excla_yoda.opacity === 0){
                    let Chief_str = "Sacred forest's chief: J'entends la raison de ta venue, le chef du village de la terre du milieu est sage. Nos souffrances proviennent d'un même maux. Va voir le chaman, nous allons ensemble réfléchir à un moyen d'arrêter le roi...";
                    info.text = Chief_str;


                }
             
            
            
            }

            if(player.within(Dragon_Statue, 32)){

                let Dragon_str = "On a toujours à apprendre des autres, même quand on le sait déjà.";
                let Dragon_str2 = "Regardez vers les étoiles et pas vers vos pieds. Essayez de donner un sens à ce que vous voyez, et demandez-vous ce qui fait que l'univers existe. Soyez curieux.-> Stephen Hawking";
                info.text =  Dragon_str + Dragon_str2;
            }


          


           

            if(player.within(Yi, 8)){
                
                let Yi_str = "Lazy Peon: Nous voulons un monde qui procure du travail à chacun, un moyen de vivre à ceux qui sont hors d'état de travailler et une demeure des hommes ou toutes les âmes s'agrandiront...: Robespierre";
                info.text = Yi_str;
                                
                
            }


            if(player.within(King, 32)){
               
                let King_str = "<br>King: my wife's lover!!";
                let king_str2 = "<br>You has been kill by the King!";
                
                info.text = King_str + king_str2;
            }


         


            if(player.within(kolima_shop, 32)){
                let kolima_shop_str = "Shop: Closed";
                info.text = kolima_shop_str;
            }


            if(player.within(Venus_Statue, 32)){
                let Venus_Statue_str = "Venus: Le plus beau triomphe de l'écrivain est de faire penser ceux qui peuvent penser...";
                info.text = Venus_Statue_str;
            
            }


            if(player.within(Jenna, 32)){

                let Jenna_str = "Jenna: L'arbre de vie se meurt depuis que le roi utilise les pouvoirs de la relique d'Aquarius.<br> Citation: Un combattant de la liberté apprend de façon brutale que c'est l'oppresseur qui définit la nature de la lutte, il ne reste souvent à l'opprimé d'autre recours que d'utiliser les méthodes qui reflètent celles de l'oppresseur. N.Mandela ";
                info.text = Jenna_str;

            }


            if(player.within(Ishtar_Statue, 32)){

                let Ishtar_str = "Ishtar: Aimer, ce n'est pas se regarder l'un l'autre, c'est regarder ensemble dans la même direction.";
                info.text = Ishtar_str;

            }


            if(player.within(Saint, 32)){

                let Saint_str = "The Sainte: Enfin les 2 villages ont décider de s'unir. Mon frère a été capturer pour sa forte affinité à la magie d'aquarius et l'ont forcé à utiliser ses pouvoirs pour la capturer grâce à des sorts interdits depuis des temps anciens";
                info.text = Saint_str;
            
            }



            if(player.within(blue_man, 32)){

                let blue_man_str = "sauve-nous de ce désastre...";

                info.text = blue_man_str;

            }



            if(player.within(Theif_Right, 32)){
                let Theif_Right_str = "Hino: Le roi à perdu la raison depuis qu'il détient la relique d'Aquarius,ils nous dépoyent de nos richesses et crée des conflits d'intérêt entre les 2 villages. Nous devons aller de l'avant... Va voir le Chef du village Sacré";

                info.text = Theif_Right_str;

            }



            if(player.within(Tiamat, 32)){

                if(Saint.within(Yi, 32)){
                    let Tiamat_str = "Phenix: Approche et concentre toi, je vais t'aider à entrer dans son temple.<br>Citation:Préjugé, vanité, calcul, voilà ce qui gouverne le monde. Celui qui ne connaît pour règle de sa conduite que raison, vérité,sentiment,n'a presque rien de commun avec la société.";
                    info.text = Tiamat_str;


                }
               
            }



            if(player.within(Felix_Situp, 32)){
                
                let Felix_Situp_str = "Shinji: La guerre... le seul divertissement de roi où les peuples aient leur part !";
                info.text = Felix_Situp_str;
            
            }



            if(player.within(fallen_Sheba, 32)){
                let fallen_Sheba_str = "Meliodas: Laisse moi dormir en paix!";

                info.text = fallen_Sheba_str;
            }


         



            if(player.within(Menardi_Small, 32)){
                let Menardi_Small_str = "Asuka: La forêt se défend afin de protéger Gaïa";
                info.text = Menardi_Small_str;

            }



            //SIGN !!!!!!!!!!!!!!


            if(player.within(sign_phenix, 32)){
                let sign_phenix_str = "Phenix Sanctuary";
                info.text =  sign_phenix_str;

            }



            if(player.within(sign_shop, 32)){
                let sign_shop_str = "Sorcerer's shop"
                info.text = sign_shop_str;
            }



            if(player.within(sign_castle, 32)){
                let sign_castle_str = "King's castle:";
            
                info.text = sign_castle_str;

            }



            if(player.within(sign2, 32)){
                let sign2_str = "Aquarius Temple";
           
                info.text = sign2_str; 
            }



            if(player.within(Warrior, 32)){
                let Warrior_str = "Je peux ressentir la souffrance de la forêt sacrée, si les sages se sont mis d'accord et ont un plan, je suis prêt à me joindre à vous. Rejoignons-nous auprès de la Sainte Guardienne!"; 
                info.text = Warrior_str;
            }









            ///STORY LINE #######################################


        

            if(oldman.within(Warrior, 32) && Saint.within(Chaman, 32)){

               
                let union_plan = "Nous allons pouvoir commencer le rituel, prends cette clée, elle te téléportera et nous t'apporterons l'invisibilité nécessaire pour traverser le château sans problème. Libère Aquarius et le frère de la Sainte. Aquarius t'aiderais très probablement à revenir, courage !"
                info.text = union_plan ;

                if(!oldman.within(Warrior, 32) && !Saint.within(Chaman, 32)){

                    info.text = "";
                   
                }

                
            }

           

            //#################################################
            //Castle quest !!!!################################

            if(player.within(tiedup_villager, 32)){
                
                
                let tiedup_villager_str = "Brother's Saint: Merci de m'avoir sauver!! Je te serais éternellement reconnaissant...";
                info.text = tiedup_villager_str;
            }
            
            
            if(player.within(Blue_statue, 32)){
               let Aquarius_quest = "Je suis heureux d'entendre que les hommes se soient unis afin de remettre de l'ordre dans notre monde.<br> Je suis épuisé, prends ma relique pour te ramener au sanctuaire, demande de l'aide au Phenix afin de rentrer dans mon temple, ton initiation ne fait que commencé.";
                info.text = Aquarius_quest;
            }



            if(player.within(graal, 8)){
                let graal_str = "U obtain The Saint Graal, the power of Alexandre Astier is yours";
            
                info.text = graal_str;
            
            }



            if(player.within(treasure, 8)){
                let treasure_str = "king's chest, some strange things are inside";
                info.text = treasure_str;
            }



            if(player.within(soldier1, 32)){
                let soldier1_str = "Go away !";
                info.text = soldier1_str;

            }





            ////////////!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            ///Aquarius Temple###############################



            if(player.within(aquarius_statue, 32)){
                
                let aquarius_str = "Sur la statue est inscrit: β Aquarii, Est l'étoile la plus brillante de la constellation du Verseau. Elle porte également le nom traditionnel Sadalsuud signifiant « chance des chances ».";
                info.text = aquarius_str;
            }

            if(player.within(Aquarius_spirit, 32)){

                let Aquarius_temple_str = "Pour rétablir l'équilibre de ce monde, tu dois partir découvrir le monde des anges et des démons et récupérer les 2 autres reliques afin d'avoir le pouvoir de faire renaître Gaïa protégé par la forêt sacrée! Bois l'eau de la fontaine, elle t'enverra dans le monde des anges";
                info.text = Aquarius_temple_str;

            }










            //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
            // ANGEL's TEMPLE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<3!!!!!!!!!!!!!!!!!!!!


            if(player.within(Nehemiel, 32)){

                let Nehemiel_lesson = "Les idées justes éclosent lorsque le coeur, la mémoire et la pensée sont en harmonie...";
                info.text = Nehemiel_lesson;

            }

            if(player.within(Husim, 32)){

                let Husim_str = "On dit: Malheur à celui qui tombe et qui n'a personne pour le reveler, mon pouvoir t'empêchera de sombrer et de quitter le monde des hommes.";

                info.text = Husim_str;
            
            }

            if(player.within(Cupidon, 32)){
                
                let Cupidon_str = "Love looks not with the eyes, but with the mind, and therefore is winged Cupid painted blind ";
                info.text = Cupidon_str;
            }

            if(player.within(Yellow_statue, 32)){
                
                let Yellow_statue_str = "Mètis: Maintenant que ton initiation est terminer auprès de nous, tu peux rentrer et continuer ta destiné. Les sages t'attendent à l'entrée de la forêt sacrée. <br>Citation: Le sage, sans agir, oeuvre. Lao Tseu ";
                info.text = Yellow_statue_str;

            }


            //###############################################################################
            //HELL QUEST ##########################################


            if(player.within(Chaman, 32)){
                

                if(silence_chief.opacity == 1){
                    let Chaman_str = "Chaman-Yallam: ";
                    
                    let Chaman_str2 = "Maintenant que les 2 sages sont réunis et enfin d'accord, va voir le jeune mage";
                   
                    info.text = Chaman_str + Chaman_str2;


                }
                
                
                if(Chaman.within(oldman, 32)){
                    
                    let Chaman_hell_str = "Bois une gorgée de cet excellent breuvage, ensuite parle au sage du village du milieu.";
                    info.text = Chaman_hell_str;
                }

               
            }

            if(player.within(oldman, 32)){
                
                
                if(excla_chief.opacity === 1){
                                    
                    let oldman_start = "Bonjour, aventurier, le savoir se perd, le roi a capturé aquarius déesse et soutire le pouvoir d'une effroyable sorcière, nous devons âgir au plus vite, passe voir Hino pour prendre connaissance de la situation";
                    info.text = oldman_start;
                }

                if(excla_chief.opacity === 0){
                    let oldman_answerd = "Je suis prêt à joindre mes forces pour arrêter le roi, retourne auprès du Chaman du village sacrée";
                
                    info.text = oldman_answerd;


                }
                
                
                if(oldman.within(Chaman, 32)){

                    let oldman_hell = "Pars visiter l'enfer, pour te connaitre un peu plus, je serais ton guide";
                    info.text = oldman_hell;

                }   
                        
                
            }

            if(player.within(Red_statue, 32)){

                let Red_statue_str = "Un étranger dans la demeure des démons, prouve ta valeur auprès de la stèle des tourments, si tu réussis j'apparaitrais sous ma vrai forme et t'offriras ma relique";
                info.text = Red_statue_str;
            }
            
            if(player.within(Pillar1, 32)){
                
                let pillar_message = "Stone:L'homme est un accident <br/> de parcours, dans un cosmos vide et froid. Il est un enfant du hasard.";
                info.text = pillar_message;

                if(Izanami.opacity > 0){

                    let Izanami_str = "Souffrance, Désespoir,Haine, Malheur t'apportera flamme éternelle. Je te permets de me l'emprunter afin de retrouver une stabilité entre nos mondes";
                    info.text = Izanami_str;

                }

            }
            
            
            if(Izanami.opacity > 0){

                let End_game_str = "La forêt s'ouvre à toi, apporte les reliques auprès de l'arbre sacrée qui renferme Gaïa.";
                info.text = End_game_str;

                if(player.within(Guardian_tree, 32)){

                    info.text = "";

                }
            }

            if(player.within(Knowledge_tree, 160)){
                
                let Gaia_str = "Le vent se lève, un livre mystérieux semble vous appeler...";
                info.text = Gaia_str;
            }




            //ITEMS ETC...

            if(player.within(sword, 8)){

                let sword_str = "Tu as obtenu l'épée d'excalibur";
                info.text = sword_str;

            
            }



            if(player.within(piece2, 32)){
                let piece2_str = "Pièce d'une ancienne civilisation";
                info.text = piece2_str;

            }

            if(player.within(crown, 8)){
                let crown_str = "Tu as obtenu la couronne du roi";
                info.text = crown_str;
            }

            if(player.within(piece, 8)){
                let piece_str = "une pièce dont la déesse Aquarius est représenté";
                info.text = piece_str;

            }


            //END GAME !!!!!!!
           
            if(player.within(book, 8)){
                let book_str = "Gaïa renaît, l'équilibre entre les mondes semblent s'être stabilisé, Le roi retrouve ses esprits peu à peu .Tu seras dorénavant Guardien de la forêt sacrée!: Multinationnal arrêtez de vouloir controler la nature, comprenez et aimez la!";
                info.text = book_str;

            }
            if(player.within(Lose, 32)){

                let start = "un nouveau départ ";
                info.text = start;
                
                game.end();
                
            }
   

        });


    }


    //lancement de la fonction start du framework et démarrage du jeu 
    game.start();
    
}



